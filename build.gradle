plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
    id 'org.javamodularity.moduleplugin' version '1.6.0'
    id 'org.beryx.jlink' version '2.17.4'
    id 'org.jetbrains.dokka' version '0.10.1'
}

group 'com.kneelawk'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 14

mainClassName = "$moduleName/com.kneelawk.cmpdl2.CMPDL2AppKt"

project.ext.tornadofxVersion = '1.7.20'
project.ext.jfxVersion = '14'
project.ext.guavaVersion = '28.2-jre'

// Future versions introduce a bug which breaks some url formatting
project.ext.httpClientVersion = '4.5.6'

switch (org.gradle.internal.os.OperatingSystem.current()) {
    case org.gradle.internal.os.OperatingSystem.LINUX:
        project.ext.jfxPlatform = "linux"
        break
    case org.gradle.internal.os.OperatingSystem.MAC_OS:
        project.ext.jfxPlatform = "mac"
        break
    case org.gradle.internal.os.OperatingSystem.WINDOWS:
        project.ext.jfxPlatform = "win"
        break
}

repositories {
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    implementation("no.tornado:tornadofx:$tornadofxVersion") {
        exclude group: "org.jetbrains.kotlin"
    }
    implementation "org.openjfx:javafx-base:$jfxVersion:$jfxPlatform"
    implementation "org.openjfx:javafx-controls:$jfxVersion:$jfxPlatform"
    implementation "org.openjfx:javafx-graphics:$jfxVersion:$jfxPlatform"
    implementation "org.openjfx:javafx-web:$jfxVersion:$jfxPlatform"
    implementation "org.openjfx:javafx-media:$jfxVersion:$jfxPlatform"

    implementation "com.google.guava:guava:$guavaVersion"

    implementation "org.apache.httpcomponents:httpclient:$httpClientVersion"
}

run {
    moduleOptions {
        addExports = ['javafx.graphics/com.sun.glass.ui': 'tornadofx']
        addOpens = ['javafx.graphics/javafx.scene': 'tornadofx']
    }
}

jlink {
    addExtraDependencies("javafx")

    options = ['--compress', '2', '--no-header-files', '--no-man-pages', '--add-modules', 'org.glassfish.java.json,jdk.crypto.cryptoki,jdk.zipfs']

    mergedModule {
        additive = true
        uses 'kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition'
        uses 'kotlin.reflect.jvm.internal.impl.util.ModuleVisibilityHelper'
    }

    launcher {
        jvmArgs = ['--add-exports', 'javafx.graphics/com.sun.glass.ui=com.kneelawk.merged.module', '--add-opens', 'javafx.graphics/javafx.scene=com.kneelawk.merged.module']
    }

    jpackage {
        skipInstaller = true
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}
